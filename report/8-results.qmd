## Results

WIP

<!-- ### Regression

```{python}
# | label: fig-regression-lagged-multiple
# | fig-cap: Results for regressing regional online/print newspaper coverage on Fridays For Future protest occurrence, controlling for weekdays and holidays and lagged values of media coverage and protest occurrence (n_lags=1). Increasing the number of lags does not substantially change the results.
# | column: page
# | echo: false

import matplotlib.pyplot as plt
from src.features.time_series.lagged_impact import plot_lagged_impact
from src.models.regression import regression

lags = 14
steps = 7
gap = 3
var = "occ_FFFX"
cum = True

fig, axes = plt.subplots(2, 2, figsize=(10, 8))
results = regression(lags=lags, steps=steps, gap=gap, cumulative=cum)
plot_lagged_impact(results, var, "protest", ax=axes[0, 0])
axes[0, 0].set_title("Online newspapers")

results = regression(lags=lags, steps=steps, gap=gap, cumulative=cum)
plot_lagged_impact(results, var, "protest", ax=axes[0, 1])
axes[0, 1].set_title("Print newspapers")

results = regression(lags=lags, steps=steps, gap=gap, cumulative=cum)
plot_lagged_impact(results, var, "goals", ax=axes[1, 0])
axes[1, 0].set_title("Online newspapers: goals and framing")

results = regression(lags=lags, steps=steps, gap=gap, cumulative=cum)
plot_lagged_impact(results, var, "goals", ax=axes[1, 1])
axes[1, 1].set_title("Print newspapers: goals and framing")
fig.tight_layout()
plt.show()
``` -->
