<!--

Analysis of the results with graphics like bargraphs and boxplots has been made. Statistical methods have been employed to compare different results. AUCs have been obtained. Minimal verification.
+ Attention has been paid to the distribution of the data. Verification has been carried out. Attention is paid to overfitting.
+ Results have been analysed with proper statistics. Model assumptions of statistical methods are verified or methods that do not make assumptions were employed for non-Gaussian data. Checks were made to avoid hidden overfitting.
+ Best approach for obtaining significant results was taken while refraining from p-value hacking.

 -->

## Results

### Evaluation of methods

#### Regression {#sec-res-reg}

Hyperparameter optimization shows that the best OLS regression model uses 7 time-series lags of all variables and no additional features. On 5 time-series cross-validation splits, it achieves a predictive performance with a root mean squared error (RMSE) of 36.5±6.2 and a (cross-validated) R² of 0.88±0.02. (The dimension is the sum of the number of climate articles published within a given date and the following day.) This is almost identical to a similarly tuned Bayesian Ridge regression model, which achieves an RMSE of 36.5±6.3 and the same R² value. A detailed regression table for the best OLS model can be found in @sec-app1-reg.

```{python}
# | echo: False

from src.models.regression.hyperopt import best_regression

r = best_regression(ignore_group=True)
t = "occ_protest_lag0"
results = r.params[t], tuple(r.conf_int().loc[t]), r.pvalues[t]
```

The coefficients for the protest variables are equivalent to the ATT (see @sec-app2-reg). Statistically significant at p=0.05 are only protest events by Fridays for Future, Letzte Generation, and groups that are coded as "other" groups. All protest coefficients are positive except for Ende Gelände and Fridays for Future + X, with negative coefficients at p-values of 0.89 and 0.18 respectively. For the aggregated protest occurrence variable (which does not consider the organizing protest group) the estimate is +5.79 additional articles in the first two days, with a confidence interval [+2.67, +8.92] and a p-value of 0.0003. More estimates are displayed in @sec-res-est.

<!-- MSE generalizability -->

#### Instrumental variables

stuff

#### Synthetic control

Pre-fit MSE, plots

Difficulties with large protest events: plot size vs #regions

#### Propensity scores

F1

### Placebo tests

#### Placebo outcome

```{python}
# | column: page
# | echo: false
# import matplotlib.pyplot as plt
# from src.visualization.impacts import plot_trends

# fig, axes = plot_trends(cumulative=False, lags=range(-7, 1), steps=range(-28, 8))
# fig.suptitle("Placebo test: estimating the causal impact on past outcomes")
# axes[0].set_ylim(-3, 5)
# axes[0].set_xticks(range(-28, 8, 7))
# plt.show()
```

#### Placebo treatment

```{python}
# | column: page
# | echo: false
# import matplotlib.pyplot as plt
# from src.visualization.impacts import plot_trends

# fig, axes = plot_trends(
#     cumulative=False,
#     lags=range(-7, 1),
#     steps=range(-15, 15),
#     random_treatment_global=56,
# )
# fig.suptitle("Placebo test: estimating the causal impact of random events")
# # axes[0].set_ylim(-3, 5)
# axes[0].set_xticks(range(-14, 14, 7))
# plt.show()
```

```{python}
# | column: page
# | echo: false
# import matplotlib.pyplot as plt
# from src.visualization.impacts import plot_trends

# fig, axes = plot_trends(
#     cumulative=False,
#     lags=range(-7, 1),
#     steps=range(-15, 15),
#     random_treatment_regional=25,
# )
# fig.suptitle("Placebo test: estimating the causal impact of random events")
# # axes[0].set_ylim(-3, 5)
# axes[0].set_xticks(range(-14, 14, 7))
# plt.show()
```

```{python}
# | fig-caption: Error bars are 95% confidence intervals.
# | column: page
# | echo: false

# Does this even make so much sense, placebo for protest groups? maybe leave out.

# import altair as alt
# from src.visualization.impacts import plot_groups

# alt.renderers.enable("altair_saver", fmts=["html", "svg"])
# plot_groups(kind="methods", step=1, random_treatment_global=True)
```

### Causal impact estimates {#sec-res-est}

#### Time series

```{python}
# | column: page
# | echo: false
# import matplotlib.pyplot as plt
# from src.visualization.impacts import plot_trends

# fig, axes = plot_trends(cumulative=False)
# fig.suptitle("Time series of the causal impact by method and coverage dimension")
# axes[0].set_ylim(-5, 5)
# plt.show()
```

#### Cumulative impact

```{python}
# | column: page
# | echo: false
# fig, axes = plot_trends(cumulative=True)
# fig.suptitle(
#     "Cumulative time series of the causal impact by method and coverage dimension"
# )
# axes[0].set_ylim(-10, 50)
# plt.show()
```

#### Protest groups

Causal effects for the individual protest groups differ substantially between regression and inverse propensity weighting and are not statistically significant at p=0.05 for the doubly robust estimator.

```{python}
# | fig-caption: Error bars are 95% confidence intervals.
# | column: page
# | echo: false

# import altair as alt
# from src.visualization.impacts import plot_groups

# alt.renderers.enable("altair_saver", fmts=["html", "svg"])
# plot_groups(kind="groups", step=1)
```

```{python}
# | fig-caption: Error bars are 95% confidence intervals.
# | column: page
# | echo: false

# import altair as alt
# from src.visualization.impacts import plot_groups

# alt.renderers.enable("altair_saver", fmts=["html", "svg"])
# plot_groups(kind="groups", step=6)
```

```{python}
# | fig-caption: Error bars are 95% confidence intervals.
# | column: page
# | echo: false

# import altair as alt
# from src.visualization.impacts import plot_groups

# alt.renderers.enable("altair_saver", fmts=["html", "svg"])
# plot_groups(kind="methods", step=1)
```
